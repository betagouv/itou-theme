::selection {
  color: $white;
  background-color: $tertiary;
}

body {
  display: flex;
  flex-direction: column;
  min-height: 100vh;

  > .s-main {
    flex: 1 0 auto;
  }
}

.container {
  max-width: map-get($container-max-widths, 'xl');
}

.h1-hero {
  color: $headings-color;
  font-family: $headings-font-family;
  margin-bottom: $headings-margin-bottom;
  font-weight: $headings-font-weight;
  line-height: $headings-line-height;
  font-size: $h1-hero-font-size-sm;

  @include media-breakpoint-up(lg) {
    font-size: $h1-hero-font-size;
  }
}

figure {
  @extend .mb-0;
}

ul {
  padding-left: map-get($spacers, 3);
}

.badge {
  @extend .d-inline-flex;
  @extend .flex-row;
  @extend .align-items-center;

  &-base {
    font-size: $font-size-base;
    padding: $badge-padding-y $badge-padding-x;

    > i {
      @extend .mr-1;
      @extend .ri-xs;
      font-weight: $font-weight-base;
    }
  }

  &-sm {
    font-size: $font-size-sm;
    padding: 0.4rem $badge-padding-x 0.5rem $badge-padding-x;

    > i {
      @extend .mr-1;
      @extend .ri-xs;
      font-weight: $font-weight-base;
    }
  }

  + .badge {
    @extend .ml-1;
  }
}

.btn.disabled,
.btn:disabled {
  pointer-events: none;
}

.form-control:disabled,
.form-control[readonly] {
  pointer-events: none;
  opacity: $btn-disabled-opacity;
}

select.form-control {
  @extend .custom-select;
}

select.form-control.form-control-sm {
  @extend .custom-select;
  @extend .custom-select-sm;
}

select.form-control.form-control-lg {
  @extend .custom-select;
  @extend .custom-select-lg;
}

.btn-ico {
  @extend .d-inline-flex;
  @extend .align-items-center;
  @extend .justify-content-center;

  span {
    @extend .d-inline-block;
    margin: 0 map-get($spacers, 2);
  }
}

:focus {
  outline-offset: 2px;
  outline: $blue 1px solid;
}

:focus:not(:focus-visible) {
  outline: 0;
}

:focus-visible {
  outline-offset: 2px;
  outline: $blue 1px solid;
}

.form-control,
.custom-select,
.btn {
  &:focus {
    outline-offset: 2px;
    outline: $blue 2px solid;
  }

  &:focus:not(:focus-visible) {
    outline: 0;
  }

  &:focus-visible {
    outline-offset: 2px;
    outline: $blue 2px solid;
  }
}

.custom-control-input {
  &:focus + .custom-control-label::before {
    outline-offset: 2px;
    outline: $blue 2px solid;
  }

  &:focus:not(:focus-visible) + .custom-control-label::before {
    outline: 0;
  }

  &:focus-visible + .custom-control-label::before {
    outline-offset: 2px;
    outline: $blue 2px solid;
  }
}


.input-group {

  .form-control {
    outline: 0 !important;
  }

  &.has-focus {
    border-radius: $input-border-radius;
    outline-offset: 2px;
    outline: $blue 2px solid;

    .input-group-text {
      border-color: $input-focus-color;
    }
  }
}

.btn-primary {

  &.hover,
  &:hover,
  &.active,
  &:active,
  &.focus,
  &:focus {
    color: $white !important;
    background-color: $tertiary !important;
    border-color:  $tertiary !important;
  }
}

.btn-outline-primary {
  background-color: transparent !important;

  &.hover,
  &:hover,
  &.active,
  &:active,
  &.focus,
  &:focus {
    color: $tertiary !important;
    background-color: transparent !important;
    border-color:  $tertiary !important;
  }
}

.btn-form-control {
  color: $input-color;
  border-color: $input-border-color;
  background-color: $input-bg;
  font-weight: $font-weight-base !important;
  @extend .text-left;

  &.hover,
  &:hover,
  &.active,
  &:active,
  &.focus,
  &:focus {
    color: $input-color;
    border-color: $input-focus-border-color;
    background-color: $input-bg;
  }

  &.disabled,
  &:disabled,
  &[readonly] {
    background-color: $gray-400;
  }
}

.btn-link {
  font-weight: $font-weight-bold;

  &.hover,
  &:hover,
  &.active,
  &:active,
  &.focus,
  &:focus {
    color: $tertiary;
  }

  &.btn-ico {
    text-decoration: none;

    span {
      text-decoration: underline
    }
  }
}

ul.pagination {
  @extend .p-0;
}

.alert {
  color: $primary !important;
}

.alert-light {
  @extend .bg-light;
}

.list-group {
  @extend .pl-0;
}

.card {
  transition: $transition-base;
  box-shadow: $box-shadow-lg;

  &:hover {
    box-shadow: $box-shadow-xl;
  }
}

.card-link {
  @extend .text-decoration-underline;
}

[data-toggle],
[data-btn] {
  cursor: pointer;
}

.form-group > label,
.input-group > label {
  font-weight: $font-weight-bold;
}

.form-group-required > label::after,
.form-group-required > div > label::after,
label.required::after {
  content: " *";
  font-weight: $font-weight-bold;
  font-size: $font-size-base;
}

.form-control.is-valid:focus,
.was-validated .form-control:valid:focus,
.form-control.is-invalid:focus,
.was-validated .form-control:invalid:focus {
  box-shadow: none;
}

.input-group > .custom-select:not(:first-child),
.input-group > .form-control:not(:first-child) {
  border-left: transparent;
  padding-left: 0;
}

.input-group:not(.has-validation) > .custom-file:not(:last-child) .custom-file-label::after,
.input-group:not(.has-validation) > .custom-select:not(:last-child),
.input-group:not(.has-validation) > .form-control:not(:last-child) {
  border-right: transparent;
  padding-right: 0;
}

.custom-select:disabled {
  opacity: 0.5;
}

.custom-checkbox,
.custom-radio {
  .custom-control-input:disabled ~ .custom-control-label::before,
  .custom-control-input[disabled] ~ .custom-control-label::before {
    border-color: $gray-600;
    background-color: $white;
  }
}

.custom-switch {

  .custom-control-input:checked ~ .custom-control-label::before {
    background-color: $success;
    border-color: $success;
  }

  .custom-control-input:disabled ~ .custom-control-label::before,
  .custom-control-input[disabled] ~ .custom-control-label::before {
    border-color: $custom-control-indicator-disabled-bg;
  }

  .custom-control-input:disabled ~ .custom-control-label::after,
  .custom-control-input[disabled] ~ .custom-control-label::after {
    background-color: $white;
  }
}

.custom-switch-lg {
  padding-left: $custom-switch-width-lg + $custom-control-gutter;
  min-height: 2.1rem;

  .custom-control-label {
    &::before {
      left: -($custom-switch-width-lg + $custom-control-gutter);
      width: $custom-switch-width-lg;
      pointer-events: all;
      height: 27px;
      border-radius: $custom-switch-indicator-border-radius-lg;
    }

    &::after {
      top: add(($font-size-base * $line-height-base - $custom-control-indicator-size) * .5, $custom-control-indicator-border-width * 2);
      left: add(-($custom-switch-width-lg + $custom-control-gutter), $custom-control-indicator-border-width * 2);
      width: $custom-switch-indicator-size-lg;
      height: $custom-switch-indicator-size-lg;
      background-color: $custom-control-indicator-border-color;
      border-radius: $custom-switch-indicator-border-radius-lg;
      @include transition(transform .15s ease-in-out, $custom-forms-transition);
    }
  }

  .custom-control-input:checked ~ .custom-control-label {
    &::after {
      background-color: $custom-control-indicator-bg;
      transform: translateX($custom-switch-width-lg - $custom-control-indicator-size-lg);
      background-image: escape-svg($custom-switch-indicator-icon-checked);
      background-repeat: no-repeat;
      background-position: center;
    }
  }

  .custom-control-input:disabled {
    &:checked ~ .custom-control-label::before {
      @include gradient-bg($custom-control-indicator-checked-disabled-bg);
    }
  }

  &.is-rtl {
    padding-left: 0 !important;
    padding-right: $custom-switch-width-lg + $custom-control-gutter;

    .custom-control-label {

      &::before {
        left: initial;
        right: -($custom-switch-width-lg + $custom-control-gutter);
      }

      &::after {
        left: initial;
        right: add(-($custom-switch-width-lg + $custom-control-gutter), $custom-control-indicator-border-width * 2);
        transform: translateX(- 1.25rem);
      }
    }

    .custom-control-input:checked ~ .custom-control-label::after {
      transform: translateX(0);
    }
  }

  &.has-state-label {
    min-height: 3rem;

    .custom-control-label {
      &::before {
        transition: $transition-base;
        color: $primary;
        content: 'Désactivé';
        font-size: $small-font-size;
        text-align: center;
        line-height: 4.5rem;
      }
    }

    .custom-control-input:checked ~ .custom-control-label {
      &::before {
        content: 'Activé';
      }
    }
  }
}

.custom-switch.is-rtl {
  padding-left: 0 !important;
  padding-right: $custom-switch-width + $custom-control-gutter;

  .custom-control-label {

    &::before {
      left: initial;
      right: -($custom-switch-width + $custom-control-gutter);
    }

    &::after {
      left: initial;
      right: add(-($custom-switch-width + $custom-control-gutter), $custom-control-indicator-border-width * 2);
      transform: translateX(- .75rem);
    }
  }

  .custom-control-input:checked ~ .custom-control-label::after {
    transform: translateX(0);
  }
}

.page-link {
  transition: $transition-base;
  font-weight: $font-weight-bold;
}

.close {
  transition: $transition-base;
  opacity: .75;

  &:not(:disabled):not(.disabled) {
    @include hover-focus() {
      opacity: 1;
    }
  }
}

hr {
  position: relative;
  color: $primary;

  &[data-text]::after {
    content: attr(data-text);
    position: absolute;
    top: -9px;
    left: 50%;
    transform: translateX(-50%);
    font-size: $font-size-sm;
    line-height: 1;
    background-color: $white;
    @extend .px-2;
  }
}

iframe {
  height: 100%;
  width: 100%;
  border: 0;
}

.modal {

  .modal-header {
    .close {
      margin: (-$modal-header-padding-y) (-$modal-header-padding-y * 2) (-$modal-header-padding-y) auto !important;
    }

    + .modal-body {
      @extend .pt-2;
    }
  }

  .modal-body > *:last-child {
    @extend .mb-0;
  }
  .modal-footer {
    @extend .pt-0;
  }
}

.progress {
  position: relative;

  &::before {
    content: '';
    position: absolute;
    display: block;
    top: 3px;
    left: 0;
    width: 100%;
    height: 2px;
    z-index: 0;
    border-radius: 1px;
    background-color: $gray-500;
  }

  .progress-bar {
    position: relative;
    z-index: 1;
    border-radius: $border-radius;
  }
}

.nav-tabs {
  justify-content: center;
  border-bottom: 1px solid $border-color;
  @extend .pb-4;
  @extend .pt-3;

  @include media-breakpoint-up(lg) {
    justify-content: left;
  }

  .nav-item {
    @extend .mx-4;
    font-weight: $font-weight-bold;

    &:first-child {
      @extend .ml-0;
      padding-left: 5px;
    }

    &:first-child {
      @extend .mr-0;
      padding-right: 5px;
    }

    .nav-link {
      @extend .px-0;
      line-height: $line-height-sm;
      position: relative;

      &.active::after {
        content: '';
        position: absolute;
        bottom: 0;
        left: -5px;
        width: calc(100% + 10px);
        height: 5px;
        background-color: $primary;
        border-radius: $rounded-pill;
      }
    }
  }

  &--marche {
    .nav-item .nav-link.active::after {
      background-color: $marche;
    }
  }

  &--communaute {
    .nav-item .nav-link.active::after {
      background-color: $communaute;
    }
  }

  &--pilotage {
    .nav-item .nav-link.active::after {
      background-color: $pilotage;
    }
  }

  &--emploi {
    .nav-item .nav-link.active::after {
      background-color: $emploi;
    }
  }
}


.list-group {

  .list-group-collapse-link {
    position: relative;
    display: block;
    text-decoration: none;

    &::before {
      @extend .mr-1;
      content: '\ea6e';
      font-family: remixicon !important;
      font-style: normal;
      -webkit-font-smoothing: antialiased;
      -moz-osx-font-smoothing: grayscale;
      line-height: 1;
      vertical-align: text-bottom;
      font-size: 1.25rem;
      font-weight: $font-weight-bold;
    }

    &[aria-expanded=true]::before {
      content: '\ea4e';
    }
  }

  .list-group-collapse-content {
    ul {
      @extend .list-unstyled;
      padding-top: $list-group-item-padding-y;

      li {
        padding-bottom: $list-group-item-padding-y / 2;
        padding-left: 20px;
      }
    }
  }
}
