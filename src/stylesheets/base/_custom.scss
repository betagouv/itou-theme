body {
  display: flex;
  flex-direction: column;
  min-height: 100vh;

  > .s-main {
    flex: 1 0 auto;
  }
}

.container {
  max-width: map-get($container-max-widths, 'xl');
}

figure {
  @extend .mb-0;
}

ul {
  padding-left: map-get($spacers, 3);
}

.badge-lg {
  padding: ($badge-padding-y * 2) ($badge-padding-x * 2);
}

.btn.disabled,
.btn:disabled {
  pointer-events: none;
}

.form-control:disabled,
.form-control[readonly] {
  pointer-events: none;
  opacity: $btn-disabled-opacity;
}

.form-control:focus {
  + .input-group-append > .input-group-text {
    border-color: $input-focus-color;
  }
}

select.form-control {
  @extend .custom-select;
}

select.form-control.form-control-sm {
  @extend .custom-select;
  @extend .custom-select-sm;
}

select.form-control.form-control-lg {
  @extend .custom-select;
  @extend .custom-select-lg;
}

.btn-ico {

  span {
    @extend .d-inline-block;
    @extend .mr-1;
  }
}

*:focus,
*.focus {
  outline: $blue 2px solid !important;
  outline-offset: 2px;
}

.btn {
  &:focus,
  &.focus {
    outline: $blue 2px solid !important;
    outline-offset: 2px;
  }
}
.btn-primary {

  &.hover,
  &:hover,
  &.active,
  &:active,
  &.focus,
  &:focus {
    color: $white !important;
    background-color: $tertiary !important;
    border-color:  $tertiary !important;
  }
}

.btn-outline-primary {
  background-color: transparent !important;

  &.hover,
  &:hover,
  &.active,
  &:active,
  &.focus,
  &:focus {
    color: $tertiary !important;
    background-color: transparent !important;
    border-color:  $tertiary !important;
  }
}

.btn-form-control {
  color: $input-color;
  border-color: $input-border-color;
  background-color: $input-bg;
  font-weight: $font-weight-base !important;
  @extend .text-left;

  &.hover,
  &:hover,
  &.active,
  &:active,
  &.focus,
  &:focus {
    color: $input-color;
    border-color: $input-focus-border-color;
    background-color: $input-bg;
  }

  &.disabled,
  &:disabled {
    background-color: $gray-400;
  }
}

.btn-link {
  font-weight: $font-weight-bold;

  &.hover,
  &:hover,
  &.active,
  &:active,
  &.focus,
  &:focus {
    color: $tertiary;
  }
}

ul.pagination {
  @extend .p-0;
}

.alert {
  color: $secondary !important;
}

.alert-light {
  @extend .bg-light;
}

.alert-link {
  color: $secondary !important;

  &:hover,
  &:focus {
    color: $primary !important;
  }
}

.list-group {
  @extend .pl-0;
}

.card {
  transition: $transition-base;
  box-shadow: $box-shadow-lg;

  &:hover {
    box-shadow: $box-shadow-xl;
  }
}

.card-link {
  @extend .text-decoration-underline;
}

[data-toggle],
[data-btn] {
  cursor: pointer;
}

.form-control.is-valid:focus,
.was-validated .form-control:valid:focus,
.form-control.is-invalid:focus,
.was-validated .form-control:invalid:focus {
  box-shadow: none;
}

.input-group > .custom-select:not(:first-child),
.input-group > .form-control:not(:first-child) {
  border-left: transparent;
  padding-left: 0;
}

.input-group:not(.has-validation) > .custom-file:not(:last-child) .custom-file-label::after,
.input-group:not(.has-validation) > .custom-select:not(:last-child),
.input-group:not(.has-validation) > .form-control:not(:last-child) {
  border-right: transparent;
  padding-right: 0;
}


.custom-select:disabled {
  opacity: 0.5;
}

.custom-switch.is-rtl {
  padding-left: 0 !important;
  padding-right: $custom-switch-width + $custom-control-gutter;

  .custom-control-label {

    &::before {
      left: initial;
      right: -($custom-switch-width + $custom-control-gutter);
    }

    &::after {
      left: initial;
      right: add(-($custom-switch-width + $custom-control-gutter), $custom-control-indicator-border-width * 2);
      transform: translateX(- .75rem);
    }
  }

  .custom-control-input:checked ~ .custom-control-label::after {
    transform: translateX(0);
  }
}
